/// <reference types="react" />
import * as React from 'react';
import { Action, Error } from '../Labelled';
export declare type Type = 'text' | 'email' | 'number' | 'password' | 'search' | 'tel' | 'url' | 'date' | 'datetime-local' | 'month' | 'time' | 'week';
export interface State {
    height?: number | null;
}
export interface Props {
    prefix?: React.ReactNode;
    suffix?: React.ReactNode;
    placeholder?: string;
    value?: string;
    helpText?: React.ReactNode;
    label: string;
    labelAction?: Action;
    labelHidden?: boolean;
    disabled?: boolean;
    readOnly?: boolean;
    autoFocus?: boolean;
    multiline?: boolean | number;
    error?: Error;
    connectedRight?: React.ReactNode;
    connectedLeft?: React.ReactNode;
    type?: Type;
    name?: string;
    id?: string;
    step?: number;
    autoComplete?: boolean;
    max?: number;
    maxLength?: number;
    min?: number;
    minLength?: number;
    pattern?: string;
    spellCheck?: boolean;
    onChange?(value: string): void;
    onFocus?(): void;
    onBlur?(): void;
}
export default class TextField extends React.PureComponent<Props, State> {
    state: State;
    private input;
    render(): JSX.Element;
    private setInput(input);
    private handleNumberChange(steps);
    private handleExpandingResize(height);
    private handleChange(event);
    private handleInputFocus();
}
