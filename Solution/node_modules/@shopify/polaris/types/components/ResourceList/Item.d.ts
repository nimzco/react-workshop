/// <reference types="react" />
import * as React from 'react';
import { DisableableAction } from '../../types';
import { Props as AvatarProps } from '../Avatar';
import { Props as ThumbnailProps } from '../Thumbnail';
import { Status } from '../Badge';
export declare type ExceptionStatus = 'neutral' | 'warning' | 'critical';
export declare type MediaSize = 'small' | 'medium' | 'large';
export declare type MediaType = 'avatar' | 'thumbnail';
export interface BadgeDescriptor {
    status: Status;
    content: string;
}
export interface ExceptionDescriptor {
    status?: ExceptionStatus;
    title?: string;
    description?: string;
}
export interface Props {
    url?: string;
    media?: React.ReactElement<AvatarProps | ThumbnailProps>;
    attributeOne: string;
    attributeTwo?: React.ReactNode;
    attributeThree?: React.ReactNode;
    badges?: BadgeDescriptor[];
    exceptions?: ExceptionDescriptor[];
    actions?: DisableableAction[];
    persistActions?: boolean;
}
export interface State {
    actionsMenuVisible: boolean;
    focused: boolean;
}
export default class Item extends React.PureComponent<Props, State> {
    state: State;
    private node;
    private id;
    render(): JSX.Element;
    private setNode(node);
    private handleFocus();
    private handleBlur(event);
    private mouseEnter();
    private mouseLeave();
    private handleClick();
    private handleCloseRequest();
}
