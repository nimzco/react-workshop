import { LinkAction, ComplexAction } from '../../types';
export interface EASDKBreadcrumb {
    label: string;
    href?: string;
    target?: string;
    loading?: boolean;
}
export declare function transformBreadcrumb(breadcrumb: LinkAction | undefined): EASDKBreadcrumb | undefined;
export interface EASDKButton {
    label?: string;
    href?: string;
    style?: 'disabled' | 'danger';
    target?: 'app' | 'shopify' | 'new' | 'parent';
    loading?: boolean;
    type?: string;
    links?: EASDKButton[];
    message?(): void;
}
export declare function transformAction(action: ComplexAction | undefined): EASDKButton | undefined;
export interface Pagination {
    hasNext?: boolean;
    hasPrevious?: boolean;
    nextURL?: string;
    previousURL?: string;
    onNext?(): void;
    onPrevious?(): void;
}
export declare type PaginationDirection = {
    message(): void;
} | {
    href: string;
};
export interface EASDKPagination {
    next?: PaginationDirection;
    previous?: PaginationDirection;
}
export declare function transformPagination(pagination?: Pagination): EASDKPagination | undefined;
